<!doctype html>
<html lang="en">
<style>
#mapwrap{position:relative;overflow:hidden;}
.category, .category *{margin:0;padding:0;color:#000;}   
.category {position:absolute;overflow:hidden;top:10px;left:10px;width:150px;height:50px;z-index:10;border:1px solid black;font-family:'Malgun Gothic','맑은 고딕',sans-serif;font-size:12px;text-align:center;background-color:#fff;}
.category .menu_selected {background:#FF5F4A;color:#fff;border-left:1px solid #915B2F;border-right:1px solid #915B2F;margin:0 -1px;} 
.category li{list-style:none;float:left;width:50px;height:45px;padding-top:5px;cursor:pointer;} 
.category .ico_comm {display:block;margin:0 auto 2px;width:22px;height:26px;background:url('http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/category.png') no-repeat;} 
.category .ico_coffee {background-position:-10px 0;}  
.category .ico_store {background-position:-10px -36px;}   
.category .ico_carpark {background-position:-10px -72px;}     
</style>
  <head>

    <link href="https://fonts.googleapis.com/css?family=Raleway:300,400,500,600" rel="stylesheet">
  </head>

  <body>
    <div id="main-wrapper" class="our-agents-content">

   

      <div id="page-content" class="page-content pt60">
        <div class="container">
          <div class="row">

            <div class="page-content">
              <div id="mapwrap" class="white-container">
                
                 
                    <div id="map" style="width:100%;height:350px;"></div>
                    
                    <div class="category">
                        <ul>
                            <li id="k_menu" onclick="changeMarker('korean')">
                                <span class="ico_comm ico_coffee"></span>
                                커피숍
                            </li>
                            <li id="j_menu" onclick="changeMarker('japanese')">
                                <span class="ico_comm ico_store"></span>
                                편의점
                            </li>
                            <li id="other_menu" onclick="changeMarker('other')">
                                <span class="ico_comm ico_carpark"></span>
                                주차장
                            </li>
                        </ul>
                    </div>                  
              </div>
         

              <div class="view-sort clearfix mb20">
                <div class="row">

                  <div class="col-sm-5 main-title">
                    <h3 class="client-registration-title">검색결과</h3>
                  </div>

                  <div class="col-sm-7">

                  </div> 
                </div> 
              </div> 
              


              <div class="candidate-description client-description applicants-content">

                <% @restaurants.each do |restaurant| %>
                    <div class="language-print client-des clearfix">
                      <div class="aplicants-pic pull-left">
                       <img class="card-img-top" src="<%= restaurant.image_path.thumb.url%>" alt="<%= restaurant.res_name%>">
                      </div>
                     
                      <div class="clearfix">
                        <div class="pull-left">
                          <h3><%=link_to "#{restaurant.res_name}" , restaurant_path(restaurant)%></h3>
                         
                        </div>
                      </div>
                      <div class="aplicant-details-show clearfix">
                        <p><%= restaurant.food_type%></p>
                        <p><%= restaurant.g_name%>이(가) <%= restaurant.r_count%>번 방문한 식당입니다. </p>
                      </div>
                    </div> 
                        <div class="additional-skills">
                           <ul class="list-inline">
                            <% restaurant.tags.each do |tag| %>
                               <li><%= link_to "##{tag.name}", "/restaurants/hashtags/#{tag.name}" , class: "btn btn-light" %></li>
                            <% end %>  
                           </ul>
                        </div> 
                <%  end %>
<%= paginate @restaurants, theme: 'twitter-bootstrap-3' %>

              </div>

   




            </div> 
          </div>
        </div> 
      </div> 


    </div>
  
<script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=c54932c4439cf12df10a1ccd41bbe691&libraries=services"></script>
<script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=c54932c4439cf12df10a1ccd41bbe691"></script>
<script>
var koreanPositions = [];
var japanesePositions = [];
var otherPositions = [];

var korean_name =[];
var japanese_name =[];
var other_name =[];
 <% @restaurants.each do |restaurant| %>
     var resP = new daum.maps.LatLng(<%= restaurant.latitude%>,<%= restaurant.longitude%>);
     
     if ("<%= restaurant.food_type%>" == "한식"){
         koreanPositions.push(resP)
         korean_name.push("<%= restaurant.res_name%>")
     }else if ("<%= restaurant.food_type%>" == "일식"){
         japanesePositions.push(resP) 
         japanese_name.push("<%= restaurant.res_name%>")
     }else{
         otherPositions.push(resP)
         other_name.push("<%= restaurant.res_name%>")
     }
        
        
 <% end %>
 
var mapContainer = document.getElementById('map'), 
    mapOption = { 
        center: new daum.maps.LatLng(37.566826, 126.9786567), 
        level: 4 
    }; 
var map = new daum.maps.Map(mapContainer, mapOption);


var bounds_k = new daum.maps.LatLngBounds();   
var bounds_j = new daum.maps.LatLngBounds();  
var bounds_o = new daum.maps.LatLngBounds();  

function setBounds(bounds) {
   
    map.setBounds(bounds);
    map.setLevel(5);
}
   

var markerImageSrc = 'http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/category.png'; 
    koreanMarkers = [], 
    japaneseMarkers = [], 
    otherMarkers = []; 

    
createKoreanMarkers(); 
createJapaneseMarkers(); 
createOtherMarkers(); 

changeMarker('korean');   


function createMarkerImage(src, size, options) {
    var markerImage = new daum.maps.MarkerImage(src, size, options);
    return markerImage;            
}


function createMarker(position, image) {
    var marker = new daum.maps.Marker({
        position: position,
        image: image
    });
    
    return marker;  
}   
   

function createKoreanMarkers() {
    
    for (var i = 0; i < koreanPositions.length; i++) {  
        
        var imageSize = new daum.maps.Size(22, 26),
            imageOptions = {  
                spriteOrigin: new daum.maps.Point(10, 0),    
                spriteSize: new daum.maps.Size(36, 98)  
            };     
        
        
        var markerImage = createMarkerImage(markerImageSrc, imageSize, imageOptions),    
            marker = createMarker(koreanPositions[i], markerImage);  
        
        var infowindow = new daum.maps.InfoWindow({
            content: `<div style='width:150px;text-align:center;padding:6px 0;'>`+korean_name[i]+`<br><a href="http://map.daum.net/link/to/`+korean_name[i]+","+koreanPositions[i].getLat()+","+koreanPositions[i].getLng()+`" style="color:blue" target="_blank">길찾기</a></div>`,
            removable : true
        });

        daum.maps.event.addListener(marker, 'click', makeOverListener(map, marker, infowindow));
    

       
        koreanMarkers.push(marker);
    }     
}

function makeOverListener(map, marker, infowindow) {
    return function() {
        infowindow.open(map, marker);
    };
}


function setKoreanMarkers(map) {        
    for (var i = 0; i < koreanMarkers.length; i++) {  
        koreanMarkers[i].setMap(map);
    }        
}

function createJapaneseMarkers() {
    for (var i = 0; i < japanesePositions.length; i++) {
        
        var imageSize = new daum.maps.Size(22, 26),
            imageOptions = {   
                spriteOrigin: new daum.maps.Point(10, 36),    
                spriteSize: new daum.maps.Size(36, 98)  
            };       
    
        var markerImage = createMarkerImage(markerImageSrc, imageSize, imageOptions),    
            marker = createMarker(japanesePositions[i], markerImage);  

        japaneseMarkers.push(marker); 
    }        
}


function setJapaneseMarkers(map) {        
    for (var i = 0; i < japaneseMarkers.length; i++) {  
        japaneseMarkers[i].setMap(map);
    }        
}

function createOtherMarkers() {
    for (var i = 0; i < otherPositions.length; i++) {
        
        var imageSize = new daum.maps.Size(22, 26),
            imageOptions = {   
                spriteOrigin: new daum.maps.Point(10, 72),    
                spriteSize: new daum.maps.Size(36, 98)  
            };       
     

        var markerImage = createMarkerImage(markerImageSrc, imageSize, imageOptions),    
            marker = createMarker(otherPositions[i], markerImage);  

        otherMarkers.push(marker);  
    }                
}


function setOtherMarkers(map) {        
    for (var i = 0; i < otherMarkers.length; i++) {  
        otherMarkers[i].setMap(map);
    }        
}


function changeMarker(type){
    
    var k_menu = document.getElementById('k_menu');
    var j_menu = document.getElementById('j_menu');
    var other_menu = document.getElementById('other_menu');
    

    if (type === 'korean') {
  
        k_menu.className = 'menu_selected';
        
  
        j_menu.className = '';
        other_menu.className = '';
    
        setKoreanMarkers(map);
        setJapaneseMarkers(null);
        setOtherMarkers(null);

    <% unless @station.nil? %>
    var moveLatLon = new daum.maps.LatLng(<%=@station.latitude%>, <%=@station.longitude%>);
        map.setCenter(moveLatLon);
    <%else%>
        bounds_k.extend(koreanPositions[0]);
        setBounds(bounds_k);
    <%end%>
    } else if (type === 'japanese') { 
    
       
        k_menu.className = '';
        j_menu.className = 'menu_selected';
        other_menu.className = '';
        
    
        setKoreanMarkers(null);
        setJapaneseMarkers(map);
        setOtherMarkers(null);
        
    <% unless @station.nil? %>
    var moveLatLon = new daum.maps.LatLng(<%=@station.latitude%>, <%=@station.longitude%>);
        map.setCenter(moveLatLon);
    <%else%>
        bounds_j.extend(japanesePositions[0]);
        setBounds(bounds_j);
    <%end%>
        
    } else if (type === 'other') { 
     
     
        k_menu.className = '';
        j_menu.className = '';
        other_menu.className = 'menu_selected';
        
      
        setKoreanMarkers(null);
        setJapaneseMarkers(null);
        setOtherMarkers(map);  

    <% unless @station.nil? %>
    var moveLatLon = new daum.maps.LatLng(<%=@station.latitude%>, <%=@station.longitude%>);
        map.setCenter(moveLatLon);
    <%else%>
        bounds_o.extend(otherPositions[0]);
        setBounds(bounds_o);
    <%end%>
        
    }
} 
</script>
    </body>
  </html>

